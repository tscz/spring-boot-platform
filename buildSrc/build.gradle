plugins {
	id 'groovy-gradle-plugin'
}

// Read version numbers (key=value pairs from <root>/gradle.properties)
def props = new Properties()
rootDir.toPath().resolveSibling(GRADLE_PROPERTIES).toFile().withInputStream {
	props.load(it)
}
props.each { key, val -> project.ext."$key" = val }

println "Setup buildSrc with versions:"
println project.ext.getProperties()

repositories {
	jcenter()
	gradlePluginPortal()
	mavenCentral()
	maven { url("https://plugins.gradle.org/m2/") }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url "https://repo.spring.io/plugins-release" }
	maven { url "https://repo.spring.io/libs-release" }
	maven { url "https://repo.spring.io/libs-milestone" }
}

dependencies {
	implementation 'gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:' + project.ext.get('coveralls.plugin.version')
	implementation 'org.asciidoctor:asciidoctor-gradle-jvm:' + project.ext.get('asciidoc.plugin.version')
	implementation 'org.asciidoctor:asciidoctor-gradle-jvm-pdf:' + project.ext.get('asciidoc.plugin.version')
	implementation 'org.springframework.boot:spring-boot-gradle-plugin:' + project.ext.get('spring_boot.plugin.version')
	implementation 'gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:' + project.ext.get('spotbugs.plugin.version')
	implementation 'com.diffplug.spotless:spotless-plugin-gradle:' + project.ext.get('spotless.plugin.version')
	implementation 'org.owasp:dependency-check-gradle:' + project.ext.get('owasp.plugin.version')
	implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:' + project.ext.get('sonarqube.plugin.version')
	implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:' + project.ext.get('pitest.plugin.version')
}

